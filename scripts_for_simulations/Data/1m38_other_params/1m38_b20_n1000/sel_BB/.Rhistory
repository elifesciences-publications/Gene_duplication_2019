sel_AB_b10_n100 <- condensed_energies('/home/axelle/Documents/Hiver2019/Paralog_interference/Simulations_May/1m38_b10_n100/sel_AB/',
50, 200, 'Selection on heterodimer AB', 10, 100)
sel_AA_b10_n100 <- condensed_energies('/home/axelle/Documents/Hiver2019/Paralog_interference/Simulations_May/1m38_b10_n100/sel_AA/',
50, 200, 'Selection on homodimer AA', 10, 100)
sel_BB_b10_n100 <- condensed_energies('/home/axelle/Documents/Hiver2019/Paralog_interference/Simulations_May/1m38_b10_n100/sel_BB/',
50, 200, 'Selection on homodimer BB', 10, 100)
# 1M38, beta = 1, N = 1000 #
sel_AA_BB_b1_n1000 <- condensed_energies('/home/axelle/Documents/Hiver2019/Paralog_interference/Simulations_May/1m38_b1_n1000/sel_AA_BB/',
50, 200, 'Selection on both homodimers', 1, 1000)
sel_AB_b1_n1000 <- condensed_energies('/home/axelle/Documents/Hiver2019/Paralog_interference/Simulations_May/1m38_b1_n1000/sel_AB/',
50, 200, 'Selection on heterodimer AB', 1, 1000)
sel_AA_b1_n1000 <- condensed_energies('/home/axelle/Documents/Hiver2019/Paralog_interference/Simulations_May/1m38_b1_n1000/sel_AA/',
50, 200, 'Selection on homodimer AA', 1, 1000)
sel_BB_b1_n1000 <- condensed_energies('/home/axelle/Documents/Hiver2019/Paralog_interference/Simulations_May/1m38_b1_n1000/sel_BB/',
50, 200, 'Selection on homodimer BB', 1, 1000)
# 1M38, beta = 10, N = 10000 #
sel_AA_BB_b10_n10000 <- condensed_energies('/home/axelle/Documents/Hiver2019/Paralog_interference/Simulations_May/1m38_b10_n10000/sel_AA_BB/',
50, 200, 'Selection on both homodimers', 10, 10000)
sel_AB_b10_n10000 <- condensed_energies('/home/axelle/Documents/Hiver2019/Paralog_interference/Simulations_May/1m38_b10_n10000/sel_AB/',
50, 200, 'Selection on heterodimer AB', 10, 10000)
sel_AA_b10_n10000 <- condensed_energies('/home/axelle/Documents/Hiver2019/Paralog_interference/Simulations_May/1m38_b10_n10000/sel_AA/',
50, 200, 'Selection on homodimer AA', 10, 10000)
sel_BB_b10_n10000 <- condensed_energies('/home/axelle/Documents/Hiver2019/Paralog_interference/Simulations_May/1m38_b10_n10000/sel_BB/',
50, 200, 'Selection on homodimer BB', 10, 10000)
# 1M38, beta = 20, N = 1000 #
sel_AA_BB_b20_n1000 <- condensed_energies('/home/axelle/Documents/Hiver2019/Paralog_interference/Simulations_May/1m38_b20_n1000/sel_AA_BB/',
50, 200, 'Selection on both homodimers', 20, 1000)
sel_AB_b20_n1000 <- condensed_energies('/home/axelle/Documents/Hiver2019/Paralog_interference/Simulations_May/1m38_b20_n1000/sel_AB/',
50, 200, 'Selection on heterodimer AB', 20, 1000)
sel_AA_b20_n1000 <- condensed_energies('/home/axelle/Documents/Hiver2019/Paralog_interference/Simulations_May/1m38_b20_n1000/sel_AA/',
50, 200, 'Selection on homodimer AA', 20, 1000)
sel_BB_b20_n1000 <- condensed_energies('/home/axelle/Documents/Hiver2019/Paralog_interference/Simulations_May/1m38_b20_n1000/sel_BB/',
50, 200, 'Selection on homodimer BB', 20, 1000)
# Put the datasets together
full_dataset <- rbind(sel_AA_BB_b10_n100$all_energies, sel_AB_b10_n100$all_energies, sel_AA_b10_n100$all_energies, sel_BB_b10_n100$all_energies,
sel_AA_BB_b1_n1000$all_energies, sel_AB_b1_n1000$all_energies, sel_AA_b1_n1000$all_energies, sel_BB_b1_n1000$all_energies,
sel_AA_BB_b10_n10000$all_energies, sel_AB_b10_n10000$all_energies, sel_AA_b10_n10000$all_energies, sel_BB_b10_n10000$all_energies,
sel_AA_BB_b20_n1000$all_energies, sel_AB_b20_n1000$all_energies, sel_AA_b20_n1000$all_energies, sel_BB_b20_n1000$all_energies)
# Prepare for the plot
full_dataset %<>% rowwise() %>%
mutate(params = paste('Beta = ', toString(Beta), ', N = ', toString(N), sep = ''))
p_all <- full_dataset %>% ggplot(aes(x=Substitution,y=Binding_energy, group=interaction(Replicate, ComplexType), color=ComplexType)) +
facet_grid(Scenario ~ params, labeller = label_wrap_gen(width = 15)) +
geom_line(size=1, alpha=0.1) +
scale_colour_manual(values = c("purple","blue", "violet"),
name = "")+
scale_alpha_manual(values = c(1, 0.3)) +
theme(panel.background = element_rect(fill = "white", colour = "grey50"),
axis.text.x= element_text(size=20), axis.text.y= element_text(size=20),
axis.title.x = element_text(size=25, face = 'bold'), axis.title.y = element_text(size=25, face = 'bold'))+
theme(
legend.key = element_rect(fill = "white"),
legend.text=element_text(size=25), legend.position = "none",
legend.justification = "center")+
ylab("Binding energy (Kcal/mol)") + xlab("Time (substitutions)") +
stat_summary(aes(group=ComplexType), fun.y=mean, geom="line", size=2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0) +
ylim(c(-55,20))+
theme(panel.border = element_rect(linetype = "solid", colour = "gray50", size=4),
strip.text.x = element_text(size = 25, face = 'bold'),
strip.text.y = element_text(size = 25, face = 'bold'),
# strip.background = element_rect(fill = '#bfbfbf')
strip.background = element_rect(fill = 'white')
)
legend <- get_legend(p_all + theme(legend.position = 'top',
legend.text=element_text(size=25),
legend.justification = "center"
) +
guides(color = guide_legend(override.aes = list(size=7))))
fig_s9 <- plot_grid(legend, p_all,
rel_heights = c(0.05, 3), ncol = 1)
ggsave(filename = '~/Bureau//Trajectories_simulations_diff_params.pdf',
width = 28, height = 28, dpi = 500, device = cairo_pdf, plot = fig_s9)
# Load the one for beta = 10, N = 1000
sel_AA_BB_b10_n1000 <- read.table('~/Documents/Hiver2019/Dropbox_backup/1.Simulations/1m38/sel_AA_BB/1m38_subfunc_N1000_all_energies.txt',
h = T, sep = '\t') %>% mutate(ComplexType = gsub(pattern = 'Homodimer_A', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_B', replacement = 'Homodimer BB', x = ComplexType),
ComplexType = gsub(pattern = 'Heterodimers', replacement = 'Heterodimer AB', x = ComplexType),
Scenario = gsub(pattern = 'Subfunctionalization', replacement = 'Selection on both homodimers', x = Scenario))
# Load the one for beta = 10, N = 1000
sel_AA_BB_b10_n1000 <- read.table('~/Documents/Hiver2019/Dropbox_backup/1.Simulations/1m38/sel_AA_BB/1m38_subfunc_N1000_all_energies.txt',
h = T, sep = '\t') %>% mutate(ComplexType = gsub(pattern = 'Homodimer_A', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_B', replacement = 'Homodimer BB', x = ComplexType),
ComplexType = gsub(pattern = 'Heterodimers', replacement = 'Heterodimer AB', x = ComplexType),
Scenario = gsub(pattern = 'Subfunctionalization', replacement = 'Selection on both homodimers', x = Scenario),
beta = 10,
N = 1000)
sel_AB_b10_n1000 <- read.table('~/Documents/Hiver2019/Dropbox_backup/1.Simulations/1m38/sel_AB/1m38_dependency_N1000_all_energies.txt',
h = T, sep = '\t') %>% mutate(ComplexType = gsub(pattern = 'Homodimer_A', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_B', replacement = 'Homodimer BB', x = ComplexType),
ComplexType = gsub(pattern = 'Heterodimers', replacement = 'Heterodimer AB', x = ComplexType),
Scenario = gsub(pattern = 'Selection on heterodimers', replacement = 'Selection on heterodimer AB', x = Scenario),
beta = 10,
N = 1000)
sel_AA_b10_n1000 <- read.table('~/Documents/Hiver2019/Dropbox_backup/1.Simulations/1m38/sel_AA/1m38_pseudo_N1000_all_energies.txt',
h = T, sep = '\t') %>% mutate(ComplexType = gsub(pattern = 'Homodimer_A', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_B', replacement = 'Homodimer BB', x = ComplexType),
ComplexType = gsub(pattern = 'Heterodimers', replacement = 'Heterodimer AB', x = ComplexType),
Scenario = gsub(pattern ='Pseudogenization', replacement = 'Selection on homodimer AA', x = Scenario),
beta = 10,
N = 1000)
sel_BB_b10_n1000 <- read.table('~/Documents/Hiver2019/Dropbox_backup/1.Simulations/1m38/sel_BB/1m38_sel_BB_all_energies.txt',
h = T, sep = '\t') %>% mutate(ComplexType = gsub(pattern = 'Homodimer_A', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_B', replacement = 'Homodimer BB', x = ComplexType),
ComplexType = gsub(pattern = 'Heterodimers', replacement = 'Heterodimer AB', x = ComplexType),
beta = 10,
N = 1000)
# Put the datasets together
full_dataset <- rbind(sel_AA_BB_b10_n100$all_energies, sel_AB_b10_n100$all_energies, sel_AA_b10_n100$all_energies, sel_BB_b10_n100$all_energies,
sel_AA_BB_b1_n1000$all_energies, sel_AB_b1_n1000$all_energies, sel_AA_b1_n1000$all_energies, sel_BB_b1_n1000$all_energies,
sel_AA_BB_b10_n10000$all_energies, sel_AB_b10_n10000$all_energies, sel_AA_b10_n10000$all_energies, sel_BB_b10_n10000$all_energies,
sel_AA_BB_b20_n1000$all_energies, sel_AB_b20_n1000$all_energies, sel_AA_b20_n1000$all_energies, sel_BB_b20_n1000$all_energies,
sel_AA_b10_n1000, sel_AB_b10_n1000, sel_AA_b10_n1000, sel_BB_b10_n1000)
View(sel_AA_b10_n1000)
# Load the one for beta = 10, N = 1000
sel_AA_BB_b10_n1000 <- read.table('~/Documents/Hiver2019/Dropbox_backup/1.Simulations/1m38/sel_AA_BB/1m38_subfunc_N1000_all_energies.txt',
h = T, sep = '\t') %>% mutate(ComplexType = gsub(pattern = 'Homodimer_A', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_B', replacement = 'Homodimer BB', x = ComplexType),
ComplexType = gsub(pattern = 'Heterodimers', replacement = 'Heterodimer AB', x = ComplexType),
Scenario = gsub(pattern = 'Subfunctionalization', replacement = 'Selection on both homodimers', x = Scenario),
Beta = 10,
N = 1000)
sel_AB_b10_n1000 <- read.table('~/Documents/Hiver2019/Dropbox_backup/1.Simulations/1m38/sel_AB/1m38_dependency_N1000_all_energies.txt',
h = T, sep = '\t') %>% mutate(ComplexType = gsub(pattern = 'Homodimer_A', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_B', replacement = 'Homodimer BB', x = ComplexType),
ComplexType = gsub(pattern = 'Heterodimers', replacement = 'Heterodimer AB', x = ComplexType),
Scenario = gsub(pattern = 'Selection on heterodimers', replacement = 'Selection on heterodimer AB', x = Scenario),
Beta = 10,
N = 1000)
sel_AA_b10_n1000 <- read.table('~/Documents/Hiver2019/Dropbox_backup/1.Simulations/1m38/sel_AA/1m38_pseudo_N1000_all_energies.txt',
h = T, sep = '\t') %>% mutate(ComplexType = gsub(pattern = 'Homodimer_A', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_B', replacement = 'Homodimer BB', x = ComplexType),
ComplexType = gsub(pattern = 'Heterodimers', replacement = 'Heterodimer AB', x = ComplexType),
Scenario = gsub(pattern ='Pseudogenization', replacement = 'Selection on homodimer AA', x = Scenario),
Beta = 10,
N = 1000)
sel_BB_b10_n1000 <- read.table('~/Documents/Hiver2019/Dropbox_backup/1.Simulations/1m38/sel_BB/1m38_sel_BB_all_energies.txt',
h = T, sep = '\t') %>% mutate(ComplexType = gsub(pattern = 'Homodimer_A', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_B', replacement = 'Homodimer BB', x = ComplexType),
ComplexType = gsub(pattern = 'Heterodimers', replacement = 'Heterodimer AB', x = ComplexType),
Beta = 10,
N = 1000)
# Put the datasets together
full_dataset <- rbind(sel_AA_BB_b10_n100$all_energies, sel_AB_b10_n100$all_energies, sel_AA_b10_n100$all_energies, sel_BB_b10_n100$all_energies,
sel_AA_BB_b1_n1000$all_energies, sel_AB_b1_n1000$all_energies, sel_AA_b1_n1000$all_energies, sel_BB_b1_n1000$all_energies,
sel_AA_BB_b10_n10000$all_energies, sel_AB_b10_n10000$all_energies, sel_AA_b10_n10000$all_energies, sel_BB_b10_n10000$all_energies,
sel_AA_BB_b20_n1000$all_energies, sel_AB_b20_n1000$all_energies, sel_AA_b20_n1000$all_energies, sel_BB_b20_n1000$all_energies,
sel_AA_b10_n1000, sel_AB_b10_n1000, sel_AA_b10_n1000, sel_BB_b10_n1000)
# Prepare for the plot
full_dataset %<>% rowwise() %>%
mutate(params = paste('Beta = ', toString(Beta), ', N = ', toString(N), sep = ''))
p_all <- full_dataset %>% ggplot(aes(x=Substitution,y=Binding_energy, group=interaction(Replicate, ComplexType), color=ComplexType)) +
facet_grid(Scenario ~ params, labeller = label_wrap_gen(width = 15)) +
geom_line(size=1, alpha=0.1) +
scale_colour_manual(values = c("purple","blue", "violet"),
name = "")+
scale_alpha_manual(values = c(1, 0.3)) +
theme(panel.background = element_rect(fill = "white", colour = "grey50"),
axis.text.x= element_text(size=20), axis.text.y= element_text(size=20),
axis.title.x = element_text(size=25, face = 'bold'), axis.title.y = element_text(size=25, face = 'bold'))+
theme(
legend.key = element_rect(fill = "white"),
legend.text=element_text(size=25), legend.position = "none",
legend.justification = "center")+
ylab("Binding energy (Kcal/mol)") + xlab("Time (substitutions)") +
stat_summary(aes(group=ComplexType), fun.y=mean, geom="line", size=2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0) +
ylim(c(-55,20))+
theme(panel.border = element_rect(linetype = "solid", colour = "gray50", size=4),
strip.text.x = element_text(size = 25, face = 'bold'),
strip.text.y = element_text(size = 25, face = 'bold'),
# strip.background = element_rect(fill = '#bfbfbf')
strip.background = element_rect(fill = 'white')
)
legend <- get_legend(p_all + theme(legend.position = 'top',
legend.text=element_text(size=25),
legend.justification = "center"
) +
guides(color = guide_legend(override.aes = list(size=7))))
fig_s9 <- plot_grid(legend, p_all,
rel_heights = c(0.05, 3), ncol = 1)
table(full_dataset$ComplexType)
# Load the one for beta = 10, N = 1000
sel_AA_BB_b10_n1000 <- read.table('~/Documents/Hiver2019/Dropbox_backup/1.Simulations/1m38/sel_AA_BB/1m38_subfunc_N1000_all_energies.txt',
h = T, sep = '\t') %>% mutate(ComplexType = gsub(pattern = 'Homodimer_A', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_B', replacement = 'Homodimer BB', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_AA', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_BB', replacement = 'Homodimer BB', x = ComplexType),
ComplexType = gsub(pattern = 'Heterodimers', replacement = 'Heterodimer AB', x = ComplexType),
Scenario = gsub(pattern = 'Subfunctionalization', replacement = 'Selection on both homodimers', x = Scenario),
Beta = 10,
N = 1000)
sel_AB_b10_n1000 <- read.table('~/Documents/Hiver2019/Dropbox_backup/1.Simulations/1m38/sel_AB/1m38_dependency_N1000_all_energies.txt',
h = T, sep = '\t') %>% mutate(ComplexType = gsub(pattern = 'Homodimer_A', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_B', replacement = 'Homodimer BB', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_AA', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_BB', replacement = 'Homodimer BB', x = ComplexType),
ComplexType = gsub(pattern = 'Heterodimers', replacement = 'Heterodimer AB', x = ComplexType),
Scenario = gsub(pattern = 'Selection on heterodimers', replacement = 'Selection on heterodimer AB', x = Scenario),
Beta = 10,
N = 1000)
sel_AA_b10_n1000 <- read.table('~/Documents/Hiver2019/Dropbox_backup/1.Simulations/1m38/sel_AA/1m38_pseudo_N1000_all_energies.txt',
h = T, sep = '\t') %>% mutate(ComplexType = gsub(pattern = 'Homodimer_A', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_B', replacement = 'Homodimer BB', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_AA', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_BB', replacement = 'Homodimer BB', x = ComplexType),
ComplexType = gsub(pattern = 'Heterodimers', replacement = 'Heterodimer AB', x = ComplexType),
Scenario = gsub(pattern ='Pseudogenization', replacement = 'Selection on homodimer AA', x = Scenario),
Beta = 10,
N = 1000)
sel_BB_b10_n1000 <- read.table('~/Documents/Hiver2019/Dropbox_backup/1.Simulations/1m38/sel_BB/1m38_sel_BB_all_energies.txt',
h = T, sep = '\t') %>% mutate(ComplexType = gsub(pattern = 'Homodimer_A', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_B', replacement = 'Homodimer BB', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_AA', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_BB', replacement = 'Homodimer BB', x = ComplexType),
ComplexType = gsub(pattern = 'Heterodimers', replacement = 'Heterodimer AB', x = ComplexType),
Beta = 10,
N = 1000)
# Put the datasets together
full_dataset <- rbind(sel_AA_BB_b10_n100$all_energies, sel_AB_b10_n100$all_energies, sel_AA_b10_n100$all_energies, sel_BB_b10_n100$all_energies,
sel_AA_BB_b1_n1000$all_energies, sel_AB_b1_n1000$all_energies, sel_AA_b1_n1000$all_energies, sel_BB_b1_n1000$all_energies,
sel_AA_BB_b10_n10000$all_energies, sel_AB_b10_n10000$all_energies, sel_AA_b10_n10000$all_energies, sel_BB_b10_n10000$all_energies,
sel_AA_BB_b20_n1000$all_energies, sel_AB_b20_n1000$all_energies, sel_AA_b20_n1000$all_energies, sel_BB_b20_n1000$all_energies,
sel_AA_b10_n1000, sel_AB_b10_n1000, sel_AA_b10_n1000, sel_BB_b10_n1000)
# Prepare for the plot
full_dataset %<>% rowwise() %>%
mutate(params = paste('Beta = ', toString(Beta), ', N = ', toString(N), sep = ''))
p_all <- full_dataset %>% ggplot(aes(x=Substitution,y=Binding_energy, group=interaction(Replicate, ComplexType), color=ComplexType)) +
facet_grid(Scenario ~ params, labeller = label_wrap_gen(width = 15)) +
geom_line(size=1, alpha=0.1) +
scale_colour_manual(values = c("purple","blue", "violet"),
name = "")+
scale_alpha_manual(values = c(1, 0.3)) +
theme(panel.background = element_rect(fill = "white", colour = "grey50"),
axis.text.x= element_text(size=20), axis.text.y= element_text(size=20),
axis.title.x = element_text(size=25, face = 'bold'), axis.title.y = element_text(size=25, face = 'bold'))+
theme(
legend.key = element_rect(fill = "white"),
legend.text=element_text(size=25), legend.position = "none",
legend.justification = "center")+
ylab("Binding energy (Kcal/mol)") + xlab("Time (substitutions)") +
stat_summary(aes(group=ComplexType), fun.y=mean, geom="line", size=2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0) +
ylim(c(-55,20))+
theme(panel.border = element_rect(linetype = "solid", colour = "gray50", size=4),
strip.text.x = element_text(size = 25, face = 'bold'),
strip.text.y = element_text(size = 25, face = 'bold'),
# strip.background = element_rect(fill = '#bfbfbf')
strip.background = element_rect(fill = 'white')
)
legend <- get_legend(p_all + theme(legend.position = 'top',
legend.text=element_text(size=25),
legend.justification = "center"
) +
guides(color = guide_legend(override.aes = list(size=7))))
table(full_dataset$ComplexType)
# Load the one for beta = 10, N = 1000
sel_AA_BB_b10_n1000 <- read.table('~/Documents/Hiver2019/Dropbox_backup/1.Simulations/1m38/sel_AA_BB/1m38_subfunc_N1000_all_energies.txt',
h = T, sep = '\t') %>% mutate(ComplexType = gsub(pattern = 'Homodimer_A', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_B', replacement = 'Homodimer BB', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_AA', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_BB', replacement = 'Homodimer BB', x = ComplexType),
ComplexType = gsub(pattern = 'Heterodimers', replacement = 'Heterodimer AB', x = ComplexType),
Scenario = gsub(pattern = 'Subfunctionalization', replacement = 'Selection on both homodimers', x = Scenario),
Beta = 10,
N = 1000)
sel_AB_b10_n1000 <- read.table('~/Documents/Hiver2019/Dropbox_backup/1.Simulations/1m38/sel_AB/1m38_dependency_N1000_all_energies.txt',
h = T, sep = '\t') %>% mutate(ComplexType = gsub(pattern = 'Homodimer_A', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_B', replacement = 'Homodimer BB', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_AA', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_BB', replacement = 'Homodimer BB', x = ComplexType),
ComplexType = gsub(pattern = 'Heterodimers', replacement = 'Heterodimer AB', x = ComplexType),
Scenario = gsub(pattern = 'Selection on heterodimers', replacement = 'Selection on heterodimer AB', x = Scenario),
Beta = 10,
N = 1000)
sel_AA_b10_n1000 <- read.table('~/Documents/Hiver2019/Dropbox_backup/1.Simulations/1m38/sel_AA/1m38_pseudo_N1000_all_energies.txt',
h = T, sep = '\t') %>% mutate(ComplexType = gsub(pattern = 'Homodimer_A', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_B', replacement = 'Homodimer BB', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_AA', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_BB', replacement = 'Homodimer BB', x = ComplexType),
ComplexType = gsub(pattern = 'Heterodimers', replacement = 'Heterodimer AB', x = ComplexType),
Scenario = gsub(pattern ='Pseudogenization', replacement = 'Selection on homodimer AA', x = Scenario),
Beta = 10,
N = 1000)
sel_BB_b10_n1000 <- read.table('~/Documents/Hiver2019/Dropbox_backup/1.Simulations/1m38/sel_BB/1m38_sel_BB_all_energies.txt',
h = T, sep = '\t') %>% mutate(ComplexType = gsub(pattern = 'Homodimer_A', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_B', replacement = 'Homodimer BB', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_AA', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_BB', replacement = 'Homodimer BB', x = ComplexType),
ComplexType = gsub(pattern = 'Heterodimers', replacement = 'Heterodimer AB', x = ComplexType),
Beta = 10,
N = 1000)
# Put the datasets together
full_dataset <- rbind(sel_AA_BB_b10_n100$all_energies, sel_AB_b10_n100$all_energies, sel_AA_b10_n100$all_energies, sel_BB_b10_n100$all_energies,
sel_AA_BB_b1_n1000$all_energies, sel_AB_b1_n1000$all_energies, sel_AA_b1_n1000$all_energies, sel_BB_b1_n1000$all_energies,
sel_AA_BB_b10_n10000$all_energies, sel_AB_b10_n10000$all_energies, sel_AA_b10_n10000$all_energies, sel_BB_b10_n10000$all_energies,
sel_AA_BB_b20_n1000$all_energies, sel_AB_b20_n1000$all_energies, sel_AA_b20_n1000$all_energies, sel_BB_b20_n1000$all_energies,
sel_AA_b10_n1000, sel_AB_b10_n1000, sel_AA_b10_n1000, sel_BB_b10_n1000)
table(full_dataset$ComplexType)
# Put the datasets together
full_dataset <- rbind(sel_AA_BB_b10_n100$all_energies, sel_AB_b10_n100$all_energies, sel_AA_b10_n100$all_energies, sel_BB_b10_n100$all_energies,
sel_AA_BB_b1_n1000$all_energies, sel_AB_b1_n1000$all_energies, sel_AA_b1_n1000$all_energies, sel_BB_b1_n1000$all_energies,
sel_AA_BB_b10_n10000$all_energies, sel_AB_b10_n10000$all_energies, sel_AA_b10_n10000$all_energies, sel_BB_b10_n10000$all_energies,
sel_AA_BB_b20_n1000$all_energies, sel_AB_b20_n1000$all_energies, sel_AA_b20_n1000$all_energies, sel_BB_b20_n1000$all_energies,
sel_AA_b10_n1000, sel_AB_b10_n1000, sel_AA_b10_n1000, sel_BB_b10_n1000) %>%
mutate(ComplexType = gsub(pattern = 'Homodimer_A', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_B', replacement = 'Homodimer BB', x = ComplexType))
table(full_dataset$ComplexType)
# Put the datasets together
full_dataset <- rbind(sel_AA_BB_b10_n100$all_energies, sel_AB_b10_n100$all_energies, sel_AA_b10_n100$all_energies, sel_BB_b10_n100$all_energies,
sel_AA_BB_b1_n1000$all_energies, sel_AB_b1_n1000$all_energies, sel_AA_b1_n1000$all_energies, sel_BB_b1_n1000$all_energies,
sel_AA_BB_b10_n10000$all_energies, sel_AB_b10_n10000$all_energies, sel_AA_b10_n10000$all_energies, sel_BB_b10_n10000$all_energies,
sel_AA_BB_b20_n1000$all_energies, sel_AB_b20_n1000$all_energies, sel_AA_b20_n1000$all_energies, sel_BB_b20_n1000$all_energies,
sel_AA_b10_n1000, sel_AB_b10_n1000, sel_AA_b10_n1000, sel_BB_b10_n1000) %>%
mutate(ComplexType = gsub(pattern = 'Homodimer_AA', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_BB', replacement = 'Homodimer BB', x = ComplexType))
table(full_dataset$ComplexType)
# Prepare for the plot
full_dataset %<>% rowwise() %>%
mutate(params = paste('Beta = ', toString(Beta), ', N = ', toString(N), sep = ''))
p_all <- full_dataset %>% ggplot(aes(x=Substitution,y=Binding_energy, group=interaction(Replicate, ComplexType), color=ComplexType)) +
facet_grid(Scenario ~ params, labeller = label_wrap_gen(width = 15)) +
geom_line(size=1, alpha=0.1) +
scale_colour_manual(values = c("purple","blue", "violet"),
name = "")+
scale_alpha_manual(values = c(1, 0.3)) +
theme(panel.background = element_rect(fill = "white", colour = "grey50"),
axis.text.x= element_text(size=20), axis.text.y= element_text(size=20),
axis.title.x = element_text(size=25, face = 'bold'), axis.title.y = element_text(size=25, face = 'bold'))+
theme(
legend.key = element_rect(fill = "white"),
legend.text=element_text(size=25), legend.position = "none",
legend.justification = "center")+
ylab("Binding energy (Kcal/mol)") + xlab("Time (substitutions)") +
stat_summary(aes(group=ComplexType), fun.y=mean, geom="line", size=2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0) +
ylim(c(-55,20))+
theme(panel.border = element_rect(linetype = "solid", colour = "gray50", size=4),
strip.text.x = element_text(size = 25, face = 'bold'),
strip.text.y = element_text(size = 25, face = 'bold'),
# strip.background = element_rect(fill = '#bfbfbf')
strip.background = element_rect(fill = 'white')
)
legend <- get_legend(p_all + theme(legend.position = 'top',
legend.text=element_text(size=25),
legend.justification = "center"
) +
guides(color = guide_legend(override.aes = list(size=7))))
fig_s9 <- plot_grid(legend, p_all,
rel_heights = c(0.05, 3), ncol = 1)
ggsave(filename = '~/Bureau//Trajectories_simulations_diff_params.pdf',
width = 28, height = 28, dpi = 500, device = cairo_pdf, plot = fig_s9)
# Put the datasets together
full_dataset <- rbind(sel_AA_BB_b10_n100$all_energies, sel_AB_b10_n100$all_energies, sel_AA_b10_n100$all_energies, sel_BB_b10_n100$all_energies,
sel_AA_BB_b1_n1000$all_energies, sel_AB_b1_n1000$all_energies, sel_AA_b1_n1000$all_energies, sel_BB_b1_n1000$all_energies,
sel_AA_BB_b10_n10000$all_energies, sel_AB_b10_n10000$all_energies, sel_AA_b10_n10000$all_energies, sel_BB_b10_n10000$all_energies,
sel_AA_BB_b20_n1000$all_energies, sel_AB_b20_n1000$all_energies, sel_AA_b20_n1000$all_energies, sel_BB_b20_n1000$all_energies,
sel_AA_BB_b10_n1000, sel_AB_b10_n1000, sel_AA_b10_n1000, sel_BB_b10_n1000) %>%
mutate(ComplexType = gsub(pattern = 'Homodimer_AA', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_BB', replacement = 'Homodimer BB', x = ComplexType))
# Prepare for the plot
full_dataset %<>% rowwise() %>%
mutate(params = paste('Beta = ', toString(Beta), ', N = ', toString(N), sep = ''))
p_all <- full_dataset %>% ggplot(aes(x=Substitution,y=Binding_energy, group=interaction(Replicate, ComplexType), color=ComplexType)) +
facet_grid(Scenario ~ params, labeller = label_wrap_gen(width = 15)) +
geom_line(size=1, alpha=0.1) +
scale_colour_manual(values = c("purple","blue", "violet"),
name = "")+
scale_alpha_manual(values = c(1, 0.3)) +
theme(panel.background = element_rect(fill = "white", colour = "grey50"),
axis.text.x= element_text(size=20), axis.text.y= element_text(size=20),
axis.title.x = element_text(size=25, face = 'bold'), axis.title.y = element_text(size=25, face = 'bold'))+
theme(
legend.key = element_rect(fill = "white"),
legend.text=element_text(size=25), legend.position = "none",
legend.justification = "center")+
ylab("Binding energy (Kcal/mol)") + xlab("Time (substitutions)") +
stat_summary(aes(group=ComplexType), fun.y=mean, geom="line", size=2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0) +
ylim(c(-55,20))+
theme(panel.border = element_rect(linetype = "solid", colour = "gray50", size=4),
strip.text.x = element_text(size = 25, face = 'bold'),
strip.text.y = element_text(size = 25, face = 'bold'),
# strip.background = element_rect(fill = '#bfbfbf')
strip.background = element_rect(fill = 'white')
)
legend <- get_legend(p_all + theme(legend.position = 'top',
legend.text=element_text(size=25),
legend.justification = "center"
) +
guides(color = guide_legend(override.aes = list(size=7))))
fig_s9 <- plot_grid(legend, p_all,
rel_heights = c(0.05, 3), ncol = 1)
ggsave(filename = '~/Bureau//Trajectories_simulations_diff_params.pdf',
width = 28, height = 28, dpi = 500, device = cairo_pdf, plot = fig_s9)
library(tidyverse)
library(ggplot2)
library(magrittr)
library(ggpubr)
# Load the data on Pfam assignments
pfam_yeast <- read_delim('/home/axelle/Dropbox/Hiver2019/Paralog_interference/Yeast_proteome_Pfam/yeast_proteome_pfam.tab', delim = '\t')
# Get a column with the systematic yeast IDs
pfam_yeast %<>% rowwise() %>%
mutate(systematic_ID_1 = str_extract(`Gene names`, 'Y.[LR]...[CW](-.)?'),
systematic_ID_2 = str_extract(`Gene names`, 'Q[0-9]+')) %>%
mutate(systematic_ID_final = ifelse(is.na(systematic_ID_1) && !(is.na(systematic_ID_2)), systematic_ID_2,
systematic_ID_1))
# Load the lists of paralogs
ssd_pairs <- read_delim('/home/axelle/Dropbox/All_paralogs/000_data/duplication_SDS_1paire.txt', delim = '\t', col_names = c('P1', 'P2'))
wgd_pairs <- read_delim('/home/axelle/Dropbox/All_paralogs/000_data/WGD.csv', delim = ';', col_names = c('P1', 'P2'))
# Concatenate the lists
all_duplicates <- bind_rows(ssd_pairs %>% mutate(Dup_type = 'SSD'), wgd_pairs %>% mutate(Dup_type = 'WGD'))
# Add the information about Pfam domains to each of the duplicates
all_duplicates_pfam <- left_join(x = all_duplicates, y = pfam_yeast %>% select(`Cross-reference (Pfam)`, systematic_ID_final),
by = c("P1" = "systematic_ID_final"))
all_duplicates_pfam <- left_join(x = all_duplicates_pfam, y = pfam_yeast %>% select(`Cross-reference (Pfam)`, systematic_ID_final),
by = c("P2" = "systematic_ID_final"))
colnames(all_duplicates_pfam) <- c('P1', 'P2', 'Dup_type', 'Pfam_P1', 'Pfam_P2')
# Axelle's function for similarity
similarity <- function(col1,col2){
if (!is.na(col1) & !is.na(col2) & col1 !="" & col2 !="") {
a <- unlist(strsplit(col1, split=";"))
b <- unlist(strsplit(col2, split=";"))
res = intersect(a,b)
resl = length(res)
tot = length(union(a,b))
if (resl>0) {
return(resl/tot)
}
else {
return(0)
}
}
else{
return(NA)
}
}
similarity <- Vectorize(similarity)
all_duplicates_pfam_jaccard <- all_duplicates_pfam %>% filter(!(is.na(Pfam_P1)) && !(is.na(Pfam_P2))) %>%
mutate(jaccard_pfam = similarity(Pfam_P1, Pfam_P2))
all_duplicates_pfam_jaccard %<>% filter(!(is.na(jaccard_pfam)))
# Load summary table
axelles_data <- read_delim('~/Documents/Hiver2019/Paper_duplication/Submission_eLife_AC/Data/Interface_conservation/summary_PCA_results_per_pairs_2019-01-07_clean.csv',
delim = ',')
# Add data on interactions
all_duplicates_pfam_interactions <- inner_join(x = all_duplicates_pfam_jaccard, y = axelles_data %>% select(P1, P2, motif_categories),
by = c("P1" = "P1", "P2" = "P2"))
comparison_list = list(c('HM.SSD', 'HM&HET.SSD'),
c('HM.SSD', 'NI.SSD'),
c('HM.SSD', 'HET.SSD'),
c('HET.SSD', 'HM&HET.SSD'),
c('HET.SSD', 'NI.SSD'),
c('HM&HET.SSD', 'NI.SSD'),
c('HM.WGD', 'HM&HET.WGD'),
c('HM.WGD', 'NI.WGD'),
c('HM.WGD', 'HET.WGD'),
c('HET.WGD', 'HM&HET.WGD'),
c('HET.WGD', 'NI.WGD'),
c('HM&HET.WGD', 'NI.WGD'))
p1 <- all_duplicates_pfam_interactions %>%
group_by(motif_categories, Dup_type) %>%
mutate(group_mean = round(mean(jaccard_pfam), 2)) %>%
ungroup() %>%
ggplot(aes(x = interaction(motif_categories, Dup_type), y = jaccard_pfam, fill = Dup_type)) +
scale_fill_manual(values = c("yellow", "lightblue")) +
geom_violin() +
geom_jitter(width = 0.25) +
# facet_wrap(~Dup_type) +
theme(plot.title = element_text(hjust = 0.5, face = 'bold'),
panel.background = element_rect(fill = "white"),
axis.title.x = element_text(face = 'bold', size = 15), axis.title.y = element_text(face = 'bold', size = 15),
axis.ticks.x = element_blank(),
axis.line = element_line(size = 0.5),
# legend.position = 'none',
axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12),
strip.text.x = element_text(size = 15, face = 'bold'),
strip.background = element_rect(fill = 'white')) +
stat_compare_means(comparisons = comparison_list, method = "wilcox.test",
paired = FALSE) +
xlab("Motif") + ylab("Pfam term similarity") + labs(fill = '') +
stat_summary(geom = 'point', fun.y = mean, colour = 'red') +
geom_text(aes(y = group_mean - 0.02, label = group_mean), fontface = 'bold') +
scale_x_discrete(labels = c('HET', 'HM', 'HM&HET', 'NI',
'HET', 'HM', 'HM&HET', 'NI'))
p1
comparison_list = list(c('HM.WGD', 'HM&HET.WGD'),
c('HM.SSD', 'HM&HET.SSD'))
# A simpler one that only has the HM vs HM&HET comparisons
p2 <- all_duplicates_pfam_interactions %>%
filter(motif_categories %in% c('HM', 'HM&HET')) %>%
group_by(motif_categories, Dup_type) %>%
mutate(group_mean = round(mean(jaccard_pfam), 2)) %>%
ggplot(aes(x = interaction(motif_categories, Dup_type), y = jaccard_pfam, fill = Dup_type)) +
scale_fill_manual(values = c("yellow", "lightblue")) +
geom_violin() +
geom_jitter(width = 0.25) +
theme(plot.title = element_text(hjust = 0.5, face = 'bold'),
panel.background = element_rect(fill = "white"),
axis.title.x = element_text(face = 'bold', size = 15), axis.title.y = element_text(face = 'bold', size = 15),
axis.ticks.x = element_blank(),
axis.line = element_line(size = 0.5),
# legend.position = 'none',
axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12),
strip.text.x = element_text(size = 15, face = 'bold'),
strip.background = element_rect(fill = 'white')) +
stat_compare_means(comparisons = comparison_list, method = "wilcox.test",
paired = FALSE) +
xlab("Motif") + ylab("Pfam term similarity") + labs(fill = '') +
stat_summary(geom = 'point', fun.y = mean, colour = 'red') +
geom_text(aes(y = group_mean - 0.02, label = group_mean), fontface = 'bold') +
scale_x_discrete(labels = c('HM', 'HM&HET', 'HM', 'HM&HET'))
p2
