condensed_energies2 <- function(folder, num_reps, num_subs, scenario, beta, N){
setwd(folder)
outlist <- list()
# Load the fixed mutations
het_fixed <- read.table('all_deltaGs_heterodimer_all_reps.tab', h = T, sep = '\t')
het_fixed %<>%
mutate(Replicate = rep(1:num_reps, each = (nrow(het_fixed)/num_reps)),
Substitution = rep(0:num_subs, nrow(het_fixed)/(num_subs+1)),
ComplexType = 'Heterodimer AB',
Scenario = scenario,
Beta = beta,
N = N)
homo_AA_fixed <- read.table('all_deltaGs_homodimer_A_all_reps.tab', h = T, sep = '\t')
homo_AA_fixed %<>%
mutate(Replicate = rep(1:num_reps, each = (nrow(homo_AA_fixed)/num_reps)),
Substitution = rep(0:num_subs, nrow(homo_AA_fixed)/(num_subs+1)),
ComplexType = 'Homodimer_AA',
Scenario = scenario,
Beta = beta,
N = N)
homo_BB_fixed <- read.table('all_deltaGs_homodimer_B_all_reps.tab', h = T, sep = '\t')
homo_BB_fixed %<>%
mutate(Replicate = rep(1:num_reps, each = (nrow(homo_BB_fixed)/num_reps)),
Substitution = rep(0:num_subs, nrow(homo_BB_fixed)/(num_subs+1)),
ComplexType = 'Homodimer_BB',
Scenario = scenario,
Beta = beta,
N = N)
outlist$all_energies <- rbind(het_fixed, homo_AA_fixed, homo_BB_fixed)
# Load the proposed mutations
het_proposed <- read.table('all_deltaGs_proposed_heterodimer_all_reps.tab', h = T, sep = '\t')
het_proposed %<>%
mutate(Replicate = rep(1:num_reps, each = (nrow(het_proposed)/num_reps)),
Substitution = rep(0:num_subs, nrow(het_proposed)/(num_subs+1)),
ComplexType = 'Heterodimer AB',
Scenario = scenario,
Beta = beta,
N = N)
homo_AA_proposed <- read.table('all_deltaGs_proposed_homodimer_A_all_reps.tab', h = T, sep = '\t')
homo_AA_proposed %<>%
mutate(Replicate = rep(1:num_reps, each = (nrow(homo_AA_proposed)/num_reps)),
Substitution = rep(0:num_subs, nrow(homo_AA_proposed)/(num_subs+1)),
ComplexType = 'Homodimer_AA',
Scenario = scenario,
Beta = beta,
N = N)
homo_BB_proposed <- read.table('all_deltaGs_proposed_homodimer_B_all_reps.tab', h = T, sep = '\t')
homo_BB_proposed %<>%
mutate(Replicate = rep(1:num_reps, each = (nrow(homo_BB_proposed)/num_reps)),
Substitution = rep(0:num_subs, nrow(homo_BB_proposed)/(num_subs+1)),
ComplexType = 'Homodimer_BB',
Scenario = scenario,
Beta = beta,
N = N)
outlist$all_proposed_energies <- rbind(het_proposed, homo_AA_proposed, homo_BB_proposed)
return(outlist)
}
sel_AA_BB_b10_n1000_500_subs <- condensed_energies2('/home/axelle/Documents/Hiver2019/Paralog_interference/Simulations_May/1m38_b10_n1000_tf0.999/sel_AA_BB_500/',
50, 500, 'Selection on both homodimers', 10, 1000)
sel_AB_b10_n1000_500_subs <- condensed_energies2('/home/axelle/Documents/Hiver2019/Paralog_interference/Simulations_May/1m38_b10_n1000_tf0.999/sel_AB_500/',
50, 500, 'Selection on heterodimer AB', 10, 1000)
library(ggplot2)
library(tidyverse)
library(magrittr)
library(cowplot)
library(grid)
library(gridExtra)
library(Cairo)
sel_AA_BB_b10_n1000_500_subs <- condensed_energies2('/home/axelle/Documents/Hiver2019/Paralog_interference/Simulations_May/1m38_b10_n1000_tf0.999/sel_AA_BB_500/',
50, 500, 'Selection on both homodimers', 10, 1000)
sel_AB_b10_n1000_500_subs <- condensed_energies2('/home/axelle/Documents/Hiver2019/Paralog_interference/Simulations_May/1m38_b10_n1000_tf0.999/sel_AB_500/',
50, 500, 'Selection on heterodimer AB', 10, 1000)
sel_AA_b10_n1000_500_subs <- condensed_energies2('/home/axelle/Documents/Hiver2019/Paralog_interference/Simulations_May/1m38_b10_n1000_tf0.999/sel_AA_500/',
50, 500, 'Selection on homodimer AA', 10, 1000)
sel_BB_b10_n1000_500_subs <- condensed_energies2('/home/axelle/Documents/Hiver2019/Paralog_interference/Simulations_May/1m38_b10_n1000_tf0.999/sel_BB_500/',
50, 500, 'Selection on homodimer BB', 10, 1000)
full_dataset <- rbind(sel_AA_BB_b10_n1000_500_subs$all_energies, sel_AB_b10_n1000_500_subs$all_energies,
sel_AA_b10_n1000_500_subs$all_energies, sel_BB_b10_n1000_500_subs) %>%
mutate(ComplexType = gsub(pattern = 'Homodimer_AA', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_BB', replacement = 'Homodimer BB', x = ComplexType))
full_dataset <- rbind(sel_AA_BB_b10_n1000_500_subs$all_energies, sel_AB_b10_n1000_500_subs$all_energies,
sel_AA_b10_n1000_500_subs$all_energies, sel_BB_b10_n1000_500_subs$all_energies) %>%
mutate(ComplexType = gsub(pattern = 'Homodimer_AA', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_BB', replacement = 'Homodimer BB', x = ComplexType))
full_dataset %<>% rowwise() %>%
mutate(params = paste('Beta = ', toString(Beta), ', N = ', toString(N), ', 500 substitutions'sep = ''))
full_dataset %<>% rowwise() %>%
mutate(params = paste('Beta = ', toString(Beta), ', N = ', toString(N), ', 500 substitutions', sep = ''))
p_all <- full_dataset %>% ggplot(aes(x=Substitution,y=Binding_energy, group=interaction(Replicate, ComplexType), color=ComplexType)) +
facet_grid(Scenario ~ params, labeller = label_wrap_gen(width = 30)) +
geom_line(size=1, alpha=0.1) +
scale_colour_manual(values = c("purple","blue", "violet"),
name = "")+
scale_alpha_manual(values = c(1, 0.3)) +
theme(panel.background = element_rect(fill = "white", colour = "grey50"),
axis.text.x= element_text(size=20), axis.text.y= element_text(size=20),
axis.title.x = element_text(size=25, face = 'bold'), axis.title.y = element_text(size=25, face = 'bold'))+
theme(
legend.key = element_rect(fill = "white"),
legend.text=element_text(size=25), legend.position = "none",
legend.justification = "center")+
ylab("Binding energy (Kcal/mol)") + xlab("Time (substitutions)") +
stat_summary(aes(group=ComplexType), fun.y=mean, geom="line", size=2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0) +
ylim(c(-55,20))+
theme(panel.border = element_rect(linetype = "solid", colour = "gray50", size=4),
strip.text.x = element_text(size = 25, face = 'bold'),
strip.text.y = element_text(size = 25, face = 'bold'),
# strip.background = element_rect(fill = '#bfbfbf')
strip.background = element_rect(fill = 'white')
)
legend <- get_legend(p_all + theme(legend.position = 'top',
legend.text=element_text(size=25),
legend.justification = "center"
) +
guides(color = guide_legend(override.aes = list(size=7))))
fig_s9 <- plot_grid(legend, p_all,
rel_heights = c(0.05, 3), ncol = 1)
# The one for all the parameters
ggsave(filename = '~/Bureau/Trajectories_simulations_500_subs_final.pdf',
width = 14, height = 21, dpi = 500, device = cairo_pdf, plot = fig_s9)
fig_s9 <- plot_grid(legend, p_all,
rel_heights = c(0.05, 4), ncol = 1)
# The one for all the parameters
ggsave(filename = '~/Bureau/Trajectories_simulations_500_subs_final.pdf',
width = 14, height = 21, dpi = 500, device = cairo_pdf, plot = fig_s9)
View(full_dataset)
full_dataset %<>% select(-params)
# Prepare to save
dataset_500_subs_1 <- rbind(sel_AA_BB_b10_n1000_500_subs$all_energies, sel_AB_b10_n1000_500_subs$all_energies) %>%
mutate(ComplexType = gsub(pattern = 'Homodimer_AA', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_BB', replacement = 'Homodimer BB', x = ComplexType)) rowwise() %>%
mutate(params = paste('Beta = ', toString(Beta), ', N = ', toString(N), ', 500 substitutions', sep = ''))
# Prepare to save
dataset_500_subs_1 <- rbind(sel_AA_BB_b10_n1000_500_subs$all_energies, sel_AB_b10_n1000_500_subs$all_energies) %>%
mutate(ComplexType = gsub(pattern = 'Homodimer_AA', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_BB', replacement = 'Homodimer BB', x = ComplexType)) %>%
rowwise() %>%
mutate(params = paste('Beta = ', toString(Beta), ', N = ', toString(N), ', 500 substitutions', sep = ''))
dataset_500_subs_2 <- rbind(sel_AA_b10_n1000_500_subs$all_energies, sel_BB_b10_n1000_500_subs$all_energies) %>%
mutate(ComplexType = gsub(pattern = 'Homodimer_AA', replacement = 'Homodimer AA', x = ComplexType),
ComplexType = gsub(pattern = 'Homodimer_BB', replacement = 'Homodimer BB', x = ComplexType)) %>%
rowwise() %>%
mutate(params = paste('Beta = ', toString(Beta), ', N = ', toString(N), ', 500 substitutions', sep = ''))
write.table(file = '/home/axelle/Documents/Hiver2019/Paper_duplication/Revisions_eLife_AC/Scripts/scripts_for_simulations/Data/data_fig_s13_2.tsv',
x = dataset_500_subs_1, quote = F, sep = '\t', row.names = F, col.names = T)
write.table(file = '/home/axelle/Documents/Hiver2019/Paper_duplication/Revisions_eLife_AC/Scripts/scripts_for_simulations/Data/data_fig_s13_6.tsv',
x = dataset_500_subs_2, quote = F, sep = '\t', row.names = F, col.names = T)
